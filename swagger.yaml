swagger: "2.0"
info:
  title: Simple Bank API
  version: "1.2"
  contact:
    name: Tech School
    url: https://github.com/techschool
    email: techschool.guru@gmail.com
tags:
  - name: SimpleBank
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: JWT token, prefix with 'Bearer '
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://auth.simplebank.com/oauth/authorize
    tokenUrl: https://auth.simplebank.com/oauth/token
    scopes:
      read: Read access to protected resources
      write: Write access to protected resources
paths:
  /v1/create_user:
    post:
      summary: Create new user
      description: Use this API to create a new user
      operationId: SimpleBank_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/pbCreateUserResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/rpcStatus"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pbCreateUserRequest"
      tags:
        - SimpleBank
  /v1/login_user:
    post:
      summary: Login user
      description: Use this API to login user and get access token & refresh token
      operationId: SimpleBank_LoginUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/pbLoginUserResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/rpcStatus"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pbLoginUserRequest"
      tags:
        - SimpleBank
  /v1/update_user:
    patch:
      summary: Update user
      description: Use this API to update user
      operationId: SimpleBank_UpdateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/pbUpdateUserResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/rpcStatus"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pbUpdateUserRequest"
      tags:
        - SimpleBank
  /v1/verify_email:
    get:
      summary: Verify email
      description: Use this API to verify user's email address
      operationId: SimpleBank_VerifyEmail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/pbVerifyEmailResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/rpcStatus"
      parameters:
        - name: emailId
          in: query
          required: false
          type: string
          format: int64
        - name: secretCode
          in: query
          required: false
          type: string
      tags:
        - SimpleBank
  /v1/accounts:
    get:
      summary: List accounts
      security:
        - Bearer: []
      parameters:
        - name: page_size
          in: query
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        - name: page_id
          in: query
          type: integer
          minimum: 1
        - name: order_by
          in: query
          type: string
          enum: [created_at, balance]
      responses:
        "200":
          description: List of accounts
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  $ref: "#/definitions/pbAccount"
              total_count:
                type: integer
        "403":
          $ref: "#/responses/Forbidden"
    post:
      summary: Create account
      security:
        - Bearer: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pbCreateAccountRequest"
      responses:
        "201":
          description: Account created successfully
          headers:
            Location:
              type: string
              description: URL of the new resource
          schema:
            $ref: "#/definitions/pbAccount"
        "400":
          $ref: "#/responses/BadRequest"
  /v1/accounts/{id}/transfers:
    post:
      summary: Create transfer
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: idempotency-key
          in: header
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pbCreateTransferRequest"
      responses:
        "201":
          description: Transfer created successfully
          schema:
            $ref: "#/definitions/pbTransfer"
        "409":
          description: Insufficient balance
          schema:
            $ref: "#/definitions/pbError"
responses:
  BadRequest:
    description: Invalid request parameters
    schema:
      $ref: "#/definitions/pbError"
  Forbidden:
    description: Authentication required
    schema:
      $ref: "#/definitions/pbError"
definitions:
  pbCreateUserRequest:
    type: object
    properties:
      username:
        type: string
      fullName:
        type: string
      email:
        type: string
      password:
        type: string
  pbCreateUserResponse:
    type: object
    properties:
      user:
        $ref: "#/definitions/pbUser"
  pbLoginUserRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  pbLoginUserResponse:
    type: object
    properties:
      user:
        $ref: "#/definitions/pbUser"
      sessionId:
        type: string
      accessToken:
        type: string
      refreshToken:
        type: string
      accessTokenExpiresAt:
        type: string
        format: date-time
      refreshTokenExpiresAt:
        type: string
        format: date-time
  pbUpdateUserRequest:
    type: object
    properties:
      username:
        type: string
      fullName:
        type: string
      email:
        type: string
      password:
        type: string
  pbUpdateUserResponse:
    type: object
    properties:
      user:
        $ref: "#/definitions/pbUser"
  pbUser:
    type: object
    properties:
      username:
        type: string
      fullName:
        type: string
      email:
        type: string
      passwordChangedAt:
        type: string
        format: date-time
      createdAt:
        type: string
        format: date-time
  pbVerifyEmailResponse:
    type: object
    properties:
      isVerified:
        type: boolean
  protobufAny:
    type: object
    properties:
      "@type":
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: "#/definitions/protobufAny"
  pbAccount:
    type: object
    properties:
      id:
        type: string
      owner_id:
        type: string
      balance:
        type: number
        format: decimal
      currency:
        type: string
        enum: [USD, EUR, GBP]
      status:
        type: string
        enum: [active, frozen, closed]
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  pbCreateAccountRequest:
    type: object
    required: [currency]
    properties:
      currency:
        type: string
        enum: [USD, EUR, GBP]
      initial_balance:
        type: number
        format: decimal
        minimum: 0
  pbCreateTransferRequest:
    type: object
    required: [to_account_id, amount, currency]
    properties:
      to_account_id:
        type: string
      amount:
        type: number
        format: decimal
        minimum: 0.01
      currency:
        type: string
        enum: [USD, EUR, GBP]
  pbTransfer:
    type: object
    properties:
      id:
        type: string
      from_account_id:
        type: string
      to_account_id:
        type: string
      amount:
        type: number
        format: decimal
      currency:
        type: string
      status:
        type: string
        enum: [pending, completed, failed]
      created_at:
        type: string
        format: date-time
  pbError:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      details:
        type: object
        additionalProperties: true
